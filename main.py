"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ Stalker Bot
"""

import asyncio
import logging
import signal
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, str(Path(__file__).parent))

from config import API_ID, API_HASH, BOT_TOKEN, ADMIN_ID
from monitor import ChannelMonitor
from bot import ControlBot
from utils import setup_logging, ensure_directories, validate_config, get_app_info


logger = logging.getLogger(__name__)


class StalkerApp:
    """–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Stalker Bot"""
    
    def __init__(self):
        self.monitor = None
        self.control_bot = None
        self.running = False
    
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
            setup_logging()
            ensure_directories()
            
            logger.info("üöÄ –ó–∞–ø—É—Å–∫ Stalker Bot...")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            config_errors = validate_config()
            if config_errors:
                logger.error("–û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
                for error in config_errors:
                    logger.error(f"  - {error}")
                logger.error("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
                return
            
            # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            app_info = get_app_info()
            logger.info(f"üìä –ö–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {app_info['channels_count']}")
            logger.info(f"üîë –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {app_info['keywords_count']}")
            logger.info(f"üì® –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {app_info['messages_found']}")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            self.monitor = ChannelMonitor()
            self.control_bot = ControlBot(self.monitor)
            
            # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤
            logger.info("üîç –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞–Ω–∞–ª–æ–≤...")
            await self.monitor.start()
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ
            await self.control_bot.send_notification(
                "üü¢ <b>Stalker Bot –∑–∞–ø—É—â–µ–Ω!</b>\n\n"
                f"üì∫ –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—Å—è –∫–∞–Ω–∞–ª–æ–≤: {app_info['channels_count']}\n"
                f"üîë –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {app_info['keywords_count']}\n"
                f"üì® –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {app_info['messages_found']}\n\n"
                "–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! üéØ"
            )
            
            self.running = True
            logger.info("‚úÖ Stalker Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
            
            # –ó–∞–ø—É—Å–∫ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –±–æ—Ç–∞ (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π)
            await self.control_bot.start()
            
        except KeyboardInterrupt:
            logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
            await self.stop()
        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}", exc_info=True)
            await self.stop()
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        if not self.running:
            return
        
        logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Stalker Bot...")
        self.running = False
        
        try:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
            if self.control_bot:
                await self.control_bot.send_notification(
                    "üî¥ <b>Stalker Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</b>\n\n"
                    "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
                )
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            if self.monitor:
                await self.monitor.stop()
                logger.info("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä –∫–∞–Ω–∞–ª–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            if self.control_bot:
                await self.control_bot.stop()
                logger.info("‚úÖ –£–ø—Ä–∞–≤–ª—è—é—â–∏–π –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            logger.info("üëã Stalker Bot –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")
    
    def setup_signal_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤"""
        def signal_handler(signum, frame):
            logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
            asyncio.create_task(self.stop())
        
        signal.signal(signal.SIGINT, signal_handler)
        signal.signal(signal.SIGTERM, signal_handler)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app = StalkerApp()
    app.setup_signal_handlers()
    await app.start()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
